#### Installation ####
# File: .zshrc or .bashrc or ...
# Add:  source ~/.my_profile
# Done...

### Determine OS being used ###

MY_OS="`uname`"
case $MY_OS in
  'Linux')
    MY_OS='linux'
    ;;
  'WindowsNT')
    MY_OS='windows'
    ;;
  'Darwin')
    MY_OS='osx'
    ;;
  *) ;;
esac

### Determine ARCH being used ###

case $(uname -m) in
  x86_64)
    MY_ARCH=x64  # or AMD64 or Intel64 or whatever
    ;;
  i*86)
    MY_ARCH=x86  # or IA32 or Intel32 or whatever
    ;;
  *)
    # ARCH as-is
    MY_ARCH=$ARCH
    ;;
esac

### Determine DISTRO being used ###

# by type
case `uname` in
  Linux )
    # test for distro by command
    MY_DISTRO=$(cat /proc/version)
    if [[ "$MY_DISTRO" == *"Ubuntu"* ]]; then
      MY_DISTRO=debian
    elif [[ "$MY_DISTRO" == *"Red Hat"* ]]; then
      MY_DISTRO=rhel
    fi
    ;;
  Darwin )
     MY_DISTRO=darwin
     ;;
  * )
     # more if needed
     # keep same
     MY_DISTRO=$DISTRO
     ;;
esac
 
### Determine SHELL being used ###

MY_SHELL=$(echo $0)
if [[ $MY_SHELL == *zsh* ]]; then
  #!/bin/zsh
  MY_SHELL=zsh
elif [[ $MY_SHELL == *bash* ]]; then
  #!/bin/bash
  MY_SHELL=bash
fi

### Determine TERM being used ###

# Note: what terminal a shell is running it (i.e. parent of the shell)
MY_TERM=$TERM
if [[ $MY_TERM == *xterm* ]]; then
  MY_TERM=xterm
fi

# verify in terminal
if [ -n $1 ] && [[ $1 == "-v" ]]; then
  echo "$MY_OS $MY_DISTRO $MY_ARCH $MY_TERM $MY_SHELL"
  echo ""
fi

### Terminal History ###

# Saving HISTFILESIZE lines to disk and loading the last HISTSIZE lines into memory
HISTSIZE=5000
HISTFILESIZE=10000

# Append history from each session, not the last to log out
if [[ $MY_SHELL == bash ]]; then
  shopt -s histappend > /dev/null 2>&1
elif [[ $MY_SHELL == zsh ]]; then
  setopt INC_APPEND_HISTORY > /dev/null 2>&1
fi

# Add commands immediatley to history, not wait for log out
export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

### Variables ###

export SUCCESS=0
export FAIL=1
# editor default
export EDITOR="vim"

### Aliases ###
alias vi='vim'
alias ktmux='tmux kill-session -t'
# not the real God, hence lowercase.
alias god='sudo'
alias please='god'
alias c='clear'
alias h='history'
alias quit='exit'
alias q='quit'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias mkdir='mkdir -pv'
alias df='df -Tha'
alias du='du -ach'
alias free='free -mt'
# show alias also if found
alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
alias here='find . -name'
# w/ millisecond
alias now='date +"%m-%d-%Y %T.%3N"'
## Safety
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias restart='sudo shutdown -r now'
alias shutdown='sudo shutdown now'
alias plogout='sudo pkill -KILL -u'

if [[ $MY_OS == osx ]]; then
  alias ls='ls -GpFA'
else
  alias ls='ls -pFA --color=auto'
fi
alias l='ls'
alias ll='ls -lAh'
alias l.='ls -d .*'
alias la='ls -lah'

if [[ ! $MY_OS == osx ]]; then
  alias ps='ps auxf'
  # search
  alias psf='ps aux | grep -v grep | grep -i -e VSZ -e'
fi

if [[ $MY_DISTRO == debian ]]; then
  alias apt-get='sudo apt-get -y'
  alias upgrade='apt-get update && apt-get upgrade && apt-get autoclean && apt-get autoremove'
fi
if [[ $MY_DISTRO == darwin ]]; then
  alias upgrade='brew update && brew upgrade && brew cleanup && brew cask cleanup'
fi

# replace awk with ag if found
if type ag > /dev/null 2>&1; then
  alias awk='ag'
fi

if type autojump > /dev/null 2>&1; then
  alias j='autojump'
fi

# Port forwarding thru SSH
#alias torified="ssh -D 127.0.0.1:1080 -L 3128:127.0.0.1:3128 -L 8123:127.0.0.1:8123 -L 8118:127.0.0.1:8118 -L 9050:127.0.0.1:9050 <username>@<ip> -p <port>"

### Functions ###

# list after each cd
cd() {
  if [ -n "$1" ]; then
    builtin cd "$@" && ls
  else
    builtin cd ~ && ls
  fi
}

# history info "-i [depth]" added
history() {
  if [ -n "$1" ] && [[ "$1" == "-i" ]]; then
    local _depth=10
    if [ -n "$2" ]; then
      _depth=$2
    fi
    builtin history | awk '{CMD[$2]++;count++;}END { for (a in CMD)print CMD[a] " " CMD[a]/count*100 "% " a;}' | grep -v "./" | column -c3 -s " " -t | sort -nr | nl |  head -n$_depth
  else
    builtin history "$@"
  fi
}

# kill vnc window(s)
kvnc()
{
  if [ -n "$1" ]; then
    vncserver -kill :$1
  else
    for v in ~/.vnc/*.pid
    do
      _window=$(basename "$v" .pid)
      echo "VNC kill $_window"
      vncserver -kill $_window
    done
  fi
}

# make space in terminal for scrolling
space() {
  for i in {1..50}
  do
   echo ""
  done
  clear
}

### Term Specifics ###

if [[ $MY_TERM == xterm ]]; then
  # backspace work instead of delete ^H
  stty erase '^?'

  # home and end keys
  bindkey '\e[H'    beginning-of-line
  bindkey '\e[F'    end-of-line
  #bindkey '\e[2~'   overwrite-mode
  #bindkey '\e[3~'   delete-char
fi

### Other ###

if [[ $MY_OS == osx ]]; then
  if type archey > /dev/null 2>&1; then
    archey
  fi

  alias afplay='afplay -q 1'

  # For fun...
  source ~/.sounds/.sound > /dev/null 2>&1
fi
