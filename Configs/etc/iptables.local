# Note: see '/etc/NetworkManager/dispatcher.d/01-firewall', forces this script to run on network up
# chmod +x iptables.local

### VPN ###
# echo $(ip link)
_tun_if=tun0
_vpn_if=eno1

#for _if in $(netstat -i | awk 'NR>2 {print $1}' | grep "^en")
#do
#  _vpn_if=$_if

iptables -I FORWARD -i ${_tun_if} -o ${_tun_if} -j ACCEPT # VPN to VPN
iptables -I FORWARD -i ${_tun_if} -o ${_vpn_if} -j ACCEPT # VPN to LAN
iptables -I FORWARD -i ${_vpn_if} -o ${_tun_if} -m state --state RELATED,ESTABLISHED -j ACCEPT # VPN <-> LAN

iptables -t nat -I POSTROUTING -o ${_vpn_if} -s 10.8.1.0/24 -j MASQUERADE # VPN Clients as if is Server

#done

### Backup Strategy ##
# Allow traffic initiated from VPN to access LAN
##iptables -I FORWARD -i ${_tun_if} -o ${_vpn_if} -s 10.8.0.0/24 -d 192.168.0.0/24 -m conntrack --ctstate NEW -j ACCEPT
# Allow established traffic to pass back and forth
##iptables -I FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# Masquerade all traffic from VPN clients -- done in the nat table
###iptables -t nat -I POSTROUTING -o ${_vpn_if} -s 10.8.0.0/24 -j MASQUERADE

### PORT Forward ###

# forward port 3000 to 80
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3000
